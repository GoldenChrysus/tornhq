//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "loss_logs")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub loss_contract_id: i64,
    pub attacker_id: i32,
    pub defender_id: i32,
    pub log_time: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::loss_contracts::Entity",
        from = "Column::LossContractId",
        to = "super::loss_contracts::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    LossContracts,
}

impl Related<super::loss_contracts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LossContracts.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
